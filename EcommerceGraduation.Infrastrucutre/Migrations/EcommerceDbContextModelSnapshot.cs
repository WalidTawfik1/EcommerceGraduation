// <auto-generated />
using System;
using EcommerceGraduation.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EcommerceGraduation.Infrastrucutre.Migrations
{
    [DbContext(typeof(EcommerceDbContext))]
    partial class EcommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.AuditLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ChangeDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ChangedBy")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TableName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LogId")
                        .HasName("PK__AuditLog__5E5499A88188D4A4");

                    b.HasIndex("ChangedBy");

                    b.ToTable("AuditLog");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Brand", b =>
                {
                    b.Property<string>("BrandCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("BrandCode");

                    b.HasIndex(new[] { "BrandName" }, "UQ__Brand__2206CE9B6FC305AD")
                        .IsUnique();

                    b.HasIndex(new[] { "BrandCode" }, "UQ__Brand__44292CC74BAD8DC1")
                        .IsUnique();

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Category", b =>
                {
                    b.Property<string>("CategoryCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryCode")
                        .HasName("PK__Category__371BA954FEB97F11");

                    b.HasIndex(new[] { "Name" }, "UQ__Category__737584F6BA133EFE")
                        .IsUnique();

                    b.ToTable("Category");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Customer", b =>
                {
                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CustomerCode");

                    b.HasIndex(new[] { "Email" }, "IDX_Customer_Email");

                    b.HasIndex(new[] { "CustomerCode" }, "UQ__Customer__066785210EEA4C72")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Customer__A9D105346050AA0D")
                        .IsUnique();

                    b.ToTable("Customer", null, t =>
                        {
                            t.HasTrigger("trg_Delete_Customer");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InvoiceID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<string>("CustomerCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("DiscountPercent")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("InvoiceDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal?>("ShippingValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(50m);

                    b.Property<decimal?>("Total")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(22, 8)")
                        .HasComputedColumnSql("(([TotalBeforeDiscount]-[TotalBeforeDiscount]*([DiscountPercent]/(100)))+[ShippingValue])", true);

                    b.Property<decimal?>("TotalAfterDiscount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(21, 8)")
                        .HasComputedColumnSql("([TotalBeforeDiscount]-[TotalBeforeDiscount]*([DiscountPercent]/(100)))", true);

                    b.Property<decimal?>("TotalBeforeDiscount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("TotalDiscount")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(20, 8)")
                        .HasComputedColumnSql("([TotalBeforeDiscount]*([DiscountPercent]/(100)))", true);

                    b.HasKey("InvoiceId")
                        .HasName("PK__Invoices__D796AAD549EF6932");

                    b.HasIndex("CustomerCode");

                    b.HasIndex("OrderNumber");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Order", b =>
                {
                    b.Property<string>("OrderNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("OrderStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalAmount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(10, 2)")
                        .HasDefaultValue(0m);

                    b.HasKey("OrderNumber")
                        .HasName("PK__Orders__CAC5E742C8EA43C2");

                    b.HasIndex("CustomerCode");

                    b.HasIndex(new[] { "OrderDate" }, "IDX_Order_Date");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.OrderDetail", b =>
                {
                    b.Property<int>("OrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderDetailID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderDetailId"));

                    b.Property<decimal?>("DiscountPercent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(5, 2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal?>("DiscountValue")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(20, 8)")
                        .HasComputedColumnSql("(([Price]*[DiscountPercent])/(100))", true);

                    b.Property<decimal?>("FinalPrice")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(21, 8)")
                        .HasComputedColumnSql("([Price]-([Price]*[DiscountPercent])/(100))", true);

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<double?>("SubTotal")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("float")
                        .HasComputedColumnSql("([Quantity]*([Price]-([Price]*[DiscountPercent])/(100)))", true);

                    b.HasKey("OrderDetailId")
                        .HasName("PK__OrderDet__D3B9D30C8E4F1F3C");

                    b.HasIndex("OrderNumber");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", null, t =>
                        {
                            t.HasTrigger("UpdateInvoiceTotals");

                            t.HasTrigger("trg_UpdateTotalAmount");
                        });

                    b.HasAnnotation("SqlServer:UseSqlOutputClause", false);
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("TransactionID");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A58B5CEF764");

                    b.HasIndex("OrderNumber");

                    b.HasIndex(new[] { "TransactionId" }, "UQ__Payment__55433A4A975A59E3")
                        .IsUnique()
                        .HasFilter("[TransactionID] IS NOT NULL");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Barcode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BrandCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("SubCategoryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Weight")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__B40CC6EDFA1F3B04");

                    b.HasIndex("BrandCode");

                    b.HasIndex("CategoryCode");

                    b.HasIndex("SubCategoryCode");

                    b.HasIndex(new[] { "Barcode" }, "IDX_Product_Barcode");

                    b.HasIndex(new[] { "Barcode" }, "UQ__Product__177800D3C1F80B60")
                        .IsUnique()
                        .HasFilter("[Barcode] IS NOT NULL");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.ProductImage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ImageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImageId"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("ImageURL");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("ImageId")
                        .HasName("PK__ProductI__7516F4EC3EA58CB2");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImage");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.ProductReview", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ReviewText")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReviewId")
                        .HasName("PK__ProductR__74BC79AEA53AB25F");

                    b.HasIndex("CustomerCode");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductReview");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Shipping", b =>
                {
                    b.Property<int>("ShippingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShippingID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShippingId"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Carrier")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly?>("EstimatedDeliveryDate")
                        .HasColumnType("date");

                    b.Property<string>("OrderNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PostalCode")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ShippingMethod")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShippingStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrackingNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ShippingId")
                        .HasName("PK__Shipping__5FACD46094216DD1");

                    b.HasIndex("OrderNumber");

                    b.HasIndex(new[] { "TrackingNumber" }, "IDX_Shipping_Tracking");

                    b.HasIndex(new[] { "TrackingNumber" }, "UQ__Shipping__784DB3D9105751C4")
                        .IsUnique()
                        .HasFilter("[TrackingNumber] IS NOT NULL");

                    b.ToTable("Shipping");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.SubCategory", b =>
                {
                    b.Property<string>("SubCategoryCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("SubCategoryCode")
                        .HasName("PK__SubCateg__E7EB078530608626");

                    b.HasIndex("CategoryCode");

                    b.HasIndex(new[] { "Name" }, "UQ__SubCateg__737584F670BC1034")
                        .IsUnique();

                    b.ToTable("SubCategory");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.AuditLog", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Customer", "ChangedByNavigation")
                        .WithMany("AuditLogs")
                        .HasForeignKey("ChangedBy")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__AuditLog__Change__4C6B5938");

                    b.Navigation("ChangedByNavigation");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Invoice", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Customer", "CustomerCodeNavigation")
                        .WithMany("Invoices")
                        .HasForeignKey("CustomerCode")
                        .HasConstraintName("FK__Invoices__Custom__671F4F74");

                    b.HasOne("EcommerceGraduation.Core.Entities.Order", "OrderNumberNavigation")
                        .WithMany("Invoices")
                        .HasForeignKey("OrderNumber")
                        .HasConstraintName("FK__Invoices__OrderN__662B2B3B");

                    b.Navigation("CustomerCodeNavigation");

                    b.Navigation("OrderNumberNavigation");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Order", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Customer", "CustomerCodeNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Orders_Customer");

                    b.Navigation("CustomerCodeNavigation");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.OrderDetail", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Order", "OrderNumberNavigation")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_orderdetail_orders");

                    b.HasOne("EcommerceGraduation.Core.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("FK__OrderDeta__Produ__68487DD7");

                    b.Navigation("OrderNumberNavigation");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Payment", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Order", "OrderNumberNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("OrderNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_payment_orders");

                    b.Navigation("OrderNumberNavigation");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Product", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Brand", "BrandCodeNavigation")
                        .WithMany("Products")
                        .HasForeignKey("BrandCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Product_Brand");

                    b.HasOne("EcommerceGraduation.Core.Entities.Category", "CategoryCodeNavigation")
                        .WithMany("Products")
                        .HasForeignKey("CategoryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Product_Category");

                    b.HasOne("EcommerceGraduation.Core.Entities.SubCategory", "SubCategoryCodeNavigation")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryCode")
                        .IsRequired()
                        .HasConstraintName("FK_Product_SubCategory");

                    b.Navigation("BrandCodeNavigation");

                    b.Navigation("CategoryCodeNavigation");

                    b.Navigation("SubCategoryCodeNavigation");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.ProductImage", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ProductIm__Produ__5EBF139D");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.ProductReview", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Customer", "CustomerCodeNavigation")
                        .WithMany("ProductReviews")
                        .HasForeignKey("CustomerCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Reviews_Customer");

                    b.HasOne("EcommerceGraduation.Core.Entities.Product", "Product")
                        .WithMany("ProductReviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK__ProductRe__Produ__7E37BEF6");

                    b.Navigation("CustomerCodeNavigation");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Shipping", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Order", "OrderNumberNavigation")
                        .WithMany("Shippings")
                        .HasForeignKey("OrderNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_shipping_orders");

                    b.Navigation("OrderNumberNavigation");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.SubCategory", b =>
                {
                    b.HasOne("EcommerceGraduation.Core.Entities.Category", "CategoryCodeNavigation")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_SubCategory_Category");

                    b.Navigation("CategoryCodeNavigation");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Customer", b =>
                {
                    b.Navigation("AuditLogs");

                    b.Navigation("Invoices");

                    b.Navigation("Orders");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Order", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("OrderDetails");

                    b.Navigation("Payments");

                    b.Navigation("Shippings");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductReviews");
                });

            modelBuilder.Entity("EcommerceGraduation.Core.Entities.SubCategory", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
